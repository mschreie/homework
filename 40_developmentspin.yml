# This starts set up of the developement spin 
#   setting up nexus and sonarqube
#    using the already set up jenkins 
# taking : https://www.opentlc.com/labs/ocp_advanced_development/04_1_CICD_Tools_Solution_Lab.html#labexercises
---
- name: setting up nexus and sonarqube
  hosts: master1.example.com
  become: yes
  tasks:
  - name: set up nexus
    shell: | 
      oc login -u system:admin
      oc new-project nexus
      sleep 2
      oc new-app sonatype/nexus3:latest
      oc expose svc nexus3
      oc rollout pause dc nexus3
  - name: define deployment strategy for nexus and set lmits for memory
    shell: | 
      oc patch dc nexus3 --patch='{ "spec": { "strategy": { "type": "Recreate" }}}'
      oc set resources dc nexus3 --limits=memory=2Gi --requests=memory=1Gi
  - name: copy nexus pvc-template to host
    template:
      src: files/pvc_nexus.j2
      dest: pvc_nexus.xml
      owner: root
      group: root
      mode: 0644
  - name: create pvc for nexus 
    shell: | 
      oc create -f pvc_nexus.xml
      oc set volume dc/nexus3 --add --overwrite --name=nexus3-volume-1 --mount-path=/nexus-data/ --type persistentVolumeClaim --claim-name=nexus-pvc

  - name: set up liveness and readiness probes for nexus.
    shell: | 
      oc set probe dc/nexus3 --liveness --failure-threshold 3 --initial-delay-seconds 60 -- echo ok
      oc set probe dc/nexus3 --readiness --failure-threshold 3 --initial-delay-seconds 60 --get-url=http://:8081/repository/maven-public/
  - name: resume deploymnet of nexus
    shell: | 
      oc rollout resume dc nexus3
  - name: copy nexus config script to host
    copy:
      src: files/setup_nexus3.sh
      dest: setup_nexus3.sh
      owner: root
      group: root
      mode: 0755

  - name: configure nexus
    shell: | 
      ./setup_nexus3.sh admin admin123 http://$(oc get route nexus3 --template='{{ '{{' }} .spec.host {{ '}}' }}')


  - name: create service and edge terminated route
    shell: | 
      oc expose dc nexus3 --port=5000 --name=nexus-registry
      oc create route edge nexus-registry --service=nexus-registry --port=5000

### now sonarquebe

  - name: set up sonarqube
    shell: | 
      oc login -u system:admin
      oc new-project sonarqube
      sleep 2
      oc new-app --template=postgresql-persistent --param POSTGRESQL_USER=sonar --param POSTGRESQL_PASSWORD=sonar --param POSTGRESQL_DATABASE=sonar --param VOLUME_CAPACITY=4Gi --labels=app=sonarqube_db
      oc new-app --docker-image=wkulhanek/sonarqube:6.7.3 --env=SONARQUBE_JDBC_USERNAME=sonar --env=SONARQUBE_JDBC_PASSWORD=sonar --env=SONARQUBE_JDBC_URL=jdbc:postgresql://postgresql/sonar --labels=app=sonarqube
      oc expose svc sonarqube
      oc rollout pause dc sonarqube

  - name: copy sonarqube pvc-template to host
    template:
      src: files/pvc_sonarqube.j2
      dest: pvc_sonarqube.xml
      owner: root
      group: root
      mode: 0644
  - name: create pvc for sonarqube 
    shell: | 
      oc create -f pvc_sonarqube.xml
      oc set volume dc/sonarqube --add --overwrite --name=sonarqube-volume-1 --mount-path=/sonarqube/data/ --type persistentVolumeClaim --claim-name=sonarqube-pvc

  - name: define deployment strategy for sonarqube and set lmits for memory
    shell: | 
      oc patch dc sonarqube --patch='{ "spec": { "strategy": { "type": "Recreate" }}}'
      oc set resources dc sonarqube --limits=memory=3Gi,cpu=2 --requests=memory=2Gi,cpu=1

  - name: set up liveness and readiness probes for sonarqube.
    shell: | 
      oc set probe dc/sonarqube --liveness --failure-threshold 3 --initial-delay-seconds 40 -- echo ok
      oc set probe dc/sonarqube --readiness --failure-threshold 3 --initial-delay-seconds 20 --get-url=http://:9000/about
  - name: resume deploymnet of sonarqube
    shell: | 
      oc rollout resume dc sonarqube
