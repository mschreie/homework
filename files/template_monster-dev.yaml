kind: Template
apiVersion: v1
metadata:
  name: monster
  annotations:
    tags: instant-app,javaee
    iconClass: icon-jboss
    description: |
      Ticket Monster is a moderately complex application that demonstrates how
      to build modern applications using JBoss web technologies

parameters:
  - name: GIT_URI
    value: git://github.com/mschreie/ticket-monster
  - name: MYSQL_DATABASE
    value: monster
  - name: MYSQL_USER
    value: monster
  - name: MYSQL_PASSWORD
    from: '[a-zA-Z0-9]{8}'
    generate: expression


objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: monster

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: monster
    spec:
      triggers:
        - type: Generic
          generic:
            secret: secret
        - type: ImageChange
        - type: ConfigChange
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: jboss-eap64-openshift:latest
            namespace: openshift
      source:
        type: Git
        git:
          uri: ${GIT_URI}
          ref: master
      output:
        to:
          kind: ImageStreamTag
          name: monster:latest

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: monster
    spec:
      replicas: 1
      selector:
        deploymentConfig: monster
      template:
        metadata:
          labels:
            deploymentConfig: monster
            name: monster
        spec:
          containers:
            - name: monster
              image: monster
              ports:
                - name: http
                  containerPort: 8080
                - name: jolokia
                  containerPort: 8778
                - name: debug
                  containerPort: 8787
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - /opt/eap/bin/readinessProbe.sh
              env:
                - name: DB_SERVICE_PREFIX_MAPPING
                  value: monster-mysql=DB
                - name: TX_DATABASE_PREFIX_MAPPING
                  value: monster-mysql=DB
                - name: DB_JNDI
                  value: java:jboss/datasources/MySQLDS
                - name: DB_DATABASE
                  value: ${MYSQL_DATABASE}
                - name: DB_USERNAME
                  value: ${MYSQL_USER}
                - name: DB_PASSWORD
                  value: ${MYSQL_PASSWORD}
                - name: JAVA_OPTS
                  value: "-Xmx512m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.logmanager -Djava.awt.headless=true -Djboss.modules.policy-permissions=true"
                - name: DEBUG
                  value: "true"
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - monster
            from:
              kind: ImageStream
              name: monster

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: monster-mysql
    spec:
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - monster-mysql
            from:
              kind: ImageStreamTag
              name: mysql:latest
              namespace: openshift
      replicas: 1
      selector:
        deploymentConfig: monster-mysql
      template:
        metadata:
          labels:
            deploymentConfig: monster-mysql
            name: monster-mysql
        spec:
          containers:
            - name: monster-mysql
              image: mysql
              ports:
                - containerPort: 3306
              env:
                - name: MYSQL_USER
                  value: ${MYSQL_USER}
                - name: MYSQL_PASSWORD
                  value: ${MYSQL_PASSWORD}
                - name: MYSQL_DATABASE
                  value: ${MYSQL_DATABASE}

  - kind: Service
    apiVersion: v1
    metadata:
      name: monster
    spec:
      ports:
        - name: http
          port: 8080
      selector:
        deploymentConfig: monster

  - kind: Service
    apiVersion: v1
    metadata:
      name: monster-mysql
    spec:
      ports:
        - port: 3306
      selector:
        deploymentConfig: monster-mysql

  - kind: Route
    apiVersion: v1
    metadata:
      name: monster
    spec:
      to:
        name: monster
